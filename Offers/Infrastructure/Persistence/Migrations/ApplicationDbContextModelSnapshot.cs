// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63ea8a32-c5c6-4382-a39f-d1fa8fa27f64"),
                            Description = "Groceries, Meals",
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("a6f12969-0e5e-4715-9fd2-c23b74f3f5d4"),
                            Description = "Drinks",
                            Name = "Beverages"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EndTime");

                    b.HasIndex("Status");

                    b.HasIndex("CategoryId", "Status");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af19dff2-6691-4fef-9650-4cabcbbefb6e"),
                            CategoryId = new Guid("63ea8a32-c5c6-4382-a39f-d1fa8fa27f64"),
                            Description = "Get half price on all freshly baked bread",
                            EndTime = new DateTime(2025, 4, 16, 17, 49, 40, 276, DateTimeKind.Local).AddTicks(311),
                            Quantity = 20,
                            StartTime = new DateTime(2025, 4, 9, 17, 49, 40, 276, DateTimeKind.Local).AddTicks(299),
                            Status = 0,
                            Title = "Bread",
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            Id = new Guid("d7d9d2db-4f4b-4e8b-9055-37a8549dc299"),
                            CategoryId = new Guid("a6f12969-0e5e-4715-9fd2-c23b74f3f5d4"),
                            Description = "Purchase any coffee and get another one free",
                            EndTime = new DateTime(2025, 4, 23, 17, 49, 40, 276, DateTimeKind.Local).AddTicks(320),
                            Quantity = 50,
                            StartTime = new DateTime(2025, 4, 9, 17, 49, 40, 276, DateTimeKind.Local).AddTicks(319),
                            Status = 0,
                            Title = "Coffee",
                            UnitPrice = 3.99m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Offer", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Offers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
